import React,{useEffect,useState}from'react';import{useParams}from'react-router-dom';
export default function Challenge(){const{id,username}=useParams();const[challenge,setChallenge]=useState(null);const[questions,setQuestions]=useState([]);const[selected,setSelected]=useState(null);const[code,setCode]=useState('# write python code\n');const[status,setStatus]=useState('');
useEffect(()=>{fetch(`http://localhost:8080/api/challenges/${id}`).then(r=>r.json()).then(d=>{setChallenge(d.challenge);setQuestions(d.questions||[]);if((d.questions||[]).length)setSelected(d.questions[0]);})},[id]);
const submit=async()=>{if(!selected)return alert('Select a question');setStatus('Submitting...');const resp=await fetch('http://localhost:8080/api/submissions',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,questionId:selected.id,code,language:'python'})});const data=await resp.json();pollStatus(data.submissionId);}
const pollStatus=(id)=>{setStatus('Pending');const i=setInterval(async()=>{const r=await fetch(`http://localhost:8080/api/submissions/${id}`);if(!r.ok)return;const s=await r.json();setStatus(s.status+(s.output?` â€” ${s.output}`:''));if(s.status!=='Pending'&&s.status!=='Running')clearInterval(i);},2000);}
return(<div className="min-h-screen p-6"><div className="max-w-6xl mx-auto grid grid-cols-3 gap-6"><div className="col-span-2 bg-white p-4 rounded shadow"><div className="flex justify-between items-center mb-4"><h2 className="text-xl">{challenge?challenge.name:'Loading...'}</h2><div>Hi,<strong>{username}</strong></div></div><div className="mb-4"><h3 className="font-semibold">Questions</h3><div className="flex gap-2 mt-2">{questions.map(q=>(<button key={q.id}onClick={()=>{setSelected(q);setCode('# write python code\n')}}className={`px-3 py-1 border rounded ${selected&&selected.id===q.id?'bg-blue-100':''}`}>{q.title}</button>))}</div></div>{selected&&( <div><h3 className="font-semibold">{selected.title}</h3><div className="text-sm text-gray-600 mb-2">Input: {selected.inputData}</div><textarea className="w-full h-48 border p-2 mb-2"value={code}onChange={e=>setCode(e.target.value)}/><div className="flex gap-2"><button className="bg-green-600 text-white px-4 py-2 rounded"onClick={submit}>Submit</button><div className="self-center text-sm text-gray-700">Status: {status}</div></div></div>)} </div><div className="bg-white p-4 rounded shadow"><h3 className="font-semibold mb-2">Leaderboard</h3><div>This starter uses a real Docker runner. Build runner image and submit code to test.</div></div></div></div>)}